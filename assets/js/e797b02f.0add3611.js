"use strict";(self.webpackChunkelite_quiz_docs=self.webpackChunkelite_quiz_docs||[]).push([[4253],{803:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>t,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"mobile/keystore","title":"Android App Signing: Keystores and SHA Keys","description":"Before going further, it\'s very important to understand how your app works and how user login happens. Most login problems are due to setup mistakes, not issues with the app, website, or admin panel code. To help you avoid these common problems, we\'ll explain the key ideas and the overall login process.","source":"@site/docs/mobile/keystore.md","sourceDirName":"mobile","slug":"/mobile/keystore","permalink":"/elite_quiz_doc/mobile/keystore","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3.5,"frontMatter":{"sidebar_position":3.5},"sidebar":"docs","previous":{"title":"App Configuration","permalink":"/elite_quiz_doc/mobile/configuration"},"next":{"title":"Authentication Setup","permalink":"/elite_quiz_doc/mobile/firebase"}}');var r=n(4848),i=n(8453);const t={sidebar_position:3.5},a="Android App Signing: Keystores and SHA Keys",l={},d=[{value:"Keystore Management and SHA Keys",id:"keystore-management-and-sha-keys",level:2},{value:"What is a Keystore?",id:"what-is-a-keystore",level:3},{value:"Types of Keystores",id:"types-of-keystores",level:3},{value:"Checking Which Keystore is Being Used",id:"checking-which-keystore-is-being-used",level:3},{value:"How to Get SHA Keys",id:"how-to-get-sha-keys",level:2},{value:"When and Why You Need SHA Keys",id:"when-and-why-you-need-sha-keys",level:3},{value:"How to Create a Release Keystore",id:"how-to-create-a-release-keystore",level:3},{value:"How to Use Your Release Keystore",id:"how-to-use-your-release-keystore",level:3}];function h(e){const s={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"android-app-signing-keystores-and-sha-keys",children:"Android App Signing: Keystores and SHA Keys"})}),"\n",(0,r.jsxs)(s.p,{children:["Before going further, it's ",(0,r.jsx)(s.strong,{children:"very important"})," to understand how your app works and how user login happens. Most login problems are due to ",(0,r.jsx)(s.strong,{children:"setup mistakes"}),", not issues with the app, website, or admin panel code. To help you ",(0,r.jsx)(s.strong,{children:"avoid these common problems"}),", we'll explain the key ideas and the overall login process."]}),"\n",(0,r.jsx)(s.admonition,{type:"caution",children:(0,r.jsxs)(s.p,{children:["Please ",(0,r.jsx)(s.strong,{children:"read this section carefully"}),", as it's ",(0,r.jsx)(s.strong,{children:"essential"})," for a smooth setup and successful logins."]})}),"\n",(0,r.jsx)(s.h2,{id:"keystore-management-and-sha-keys",children:"Keystore Management and SHA Keys"}),"\n",(0,r.jsxs)(s.p,{children:["Knowing about keystores, what kinds there are, how to check which one is being used, how to get SHA keys, and how to create a release keystore is ",(0,r.jsx)(s.strong,{children:"very important for correct and safe Firebase authentication"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"what-is-a-keystore",children:"What is a Keystore?"}),"\n",(0,r.jsxs)(s.p,{children:["A keystore is a file that safely stores private keys and their public certificates. These keys are needed to ",(0,r.jsx)(s.strong,{children:"digitally sign your Android app"}),", which proves it's real and hasn't been changed."]}),"\n",(0,r.jsx)(s.h3,{id:"types-of-keystores",children:"Types of Keystores"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Debug Keystore:"})," Android Studio ",(0,r.jsx)(s.strong,{children:"automatically makes this"})," when you build your app for testing. It's only for ",(0,r.jsx)(s.strong,{children:"development and testing"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Release Keystore:"})," This is a ",(0,r.jsx)(s.strong,{children:"special keystore you make and manage yourself"}),". You ",(0,r.jsx)(s.strong,{children:"must use this"})," to sign your app before putting it on the Google Play Store. ",(0,r.jsx)(s.strong,{children:"Never lose your release keystore"}),", because you'll need it for ",(0,r.jsx)(s.em,{children:"all future updates"})," to your app."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"checking-which-keystore-is-being-used",children:"Checking Which Keystore is Being Used"}),"\n",(0,r.jsxs)(s.p,{children:["When you're developing, your app is usually signed with the debug keystore. For a public release, it ",(0,r.jsx)(s.strong,{children:"must be signed with your own release keystore"}),". The signing settings are usually in your ",(0,r.jsx)(s.code,{children:"android/app/build.gradle"})," file."]}),"\n",(0,r.jsxs)(s.p,{children:["You can check this by going to ",(0,r.jsx)(s.code,{children:"android/app/build.gradle"})," and looking for ",(0,r.jsx)(s.code,{children:"signingConfig"})," to see which one is uncommented (doesn't have ",(0,r.jsx)(s.code,{children:"//"})," before the line)."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Android Build Mode",src:n(9753).A+"",width:"2248",height:"1058"})}),"\n",(0,r.jsx)(s.h2,{id:"how-to-get-sha-keys",children:"How to Get SHA Keys"}),"\n",(0,r.jsxs)(s.p,{children:["SHA (Secure Hash Algorithm) keys (like SHA-1 and SHA-256) are like unique fingerprints of your signing certificate. Firebase uses these fingerprints to ",(0,r.jsx)(s.strong,{children:"make sure your app is real and hasn't been tampered with"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Note:"})," Make sure you can use the ",(0,r.jsx)(s.code,{children:"keytool"})," command in your terminal. If not, there might be an issue with your system's PATH configuration that you'll need to fix."]}),"\n",(0,r.jsxs)(s.p,{children:["To get SHA-1 and SHA-256 keys for your ",(0,r.jsx)(s.strong,{children:"debug keystore"}),":"]}),"\n",(0,r.jsx)(s.p,{children:"On macOS/Linux, open your terminal and type:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sh",children:"keytool -list -v -keystore ~/.android/debug.keystore -alias androiddebugkey -storepass android -keypass android\n"})}),"\n",(0,r.jsx)(s.p,{children:"On Windows, open your command prompt and type:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sh",children:"keytool -list -v -keystore %USERPROFILE%\\.android\\debug.keystore -alias androiddebugkey -storepass android -keypass android\n"})}),"\n",(0,r.jsxs)(s.p,{children:["To get SHA-1 and SHA-256 keys for your ",(0,r.jsx)(s.strong,{children:"release keystore"}),":"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Replace"})," ",(0,r.jsx)(s.code,{children:"your_release_keystore.jks"})," with the ",(0,r.jsx)(s.strong,{children:"full path"})," to your release keystore file and ",(0,r.jsx)(s.code,{children:"your_alias_name"})," with your specific alias."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sh",children:"keytool -list -v -keystore /path/to/your_release_keystore.jks -alias your_alias_name\n"})}),"\n",(0,r.jsx)(s.p,{children:"You will be asked to enter the keystore password."}),"\n",(0,r.jsxs)(s.p,{children:["You can also use a Gradle command to check. After running your app once, go to the ",(0,r.jsx)(s.code,{children:"android"})," folder of your project in the terminal and run:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sh",children:"./gradlew :app:signingReport\n"})}),"\n",(0,r.jsx)(s.h3,{id:"when-and-why-you-need-sha-keys",children:"When and Why You Need SHA Keys"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Google Sign-In:"})," Requires your app\u2019s SHA-1 key to be registered in Firebase."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Phone Auth:"})," Also depends on correct SHA keys."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Play Store:"})," After uploading your app, Google Play will sign it with its own key. You ",(0,r.jsx)(s.strong,{children:"must add the Play Store\u2019s SHA-1 to Firebase"})," for authentication to work in production."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"how-to-create-a-release-keystore",children:"How to Create a Release Keystore"}),"\n",(0,r.jsxs)(s.p,{children:["To make a new release keystore, use the ",(0,r.jsx)(s.code,{children:"keytool"})," program. Open your terminal or command prompt and type:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sh",children:"keytool -genkeypair -v -keystore your_release_keystore.jks -alias your_alias_name -keyalg RSA -keysize 2048 -validity 10000\n"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"your_release_keystore.jks"}),": This is the name you choose for your keystore file."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"your_alias_name"}),": This is a name for the key pair you're creating."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"validity 10000"}),": This sets how long the certificate is good for in days (like 10,000 days, which is about 27 years)."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"During this process, you'll be asked to set a password for the keystore and the key, along with other info like your name, organization, city, state, and country code."}),"\n",(0,r.jsx)(s.admonition,{title:"important",type:"danger",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"It's very important to remember these passwords and keep your keystore file in a very safe place"}),"."]})}),"\n",(0,r.jsx)(s.h3,{id:"how-to-use-your-release-keystore",children:"How to Use Your Release Keystore"}),"\n",(0,r.jsx)(s.p,{children:"After you've created your release keystore, you need to tell your Android project how to use it."}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Create a new file named ",(0,r.jsx)(s.code,{children:"key.properties"})," in the ",(0,r.jsxs)(s.strong,{children:[(0,r.jsx)(s.code,{children:"android"})," directory"]})," of your project. This file will store your keystore details securely."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Add the following lines to your ",(0,r.jsx)(s.code,{children:"key.properties"})," file, replacing the placeholder text with your specific information:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-properties",children:"storePassword=<your-store-password>\nkeyPassword=<your-key-password>\nkeyAlias=<your-key-alias>\nstoreFile=<path-to-your-release-keystore.jks>\n"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"storePassword"}),": The password you created for your keystore."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"keyPassword"}),": The password you created for the key."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"keyAlias"}),": The alias you gave your key."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"storeFile"}),": The path to your keystore file. You can use a relative path from the ",(0,r.jsx)(s.code,{children:"android/app"})," folder (e.g., ",(0,r.jsx)(s.code,{children:"../your_keystore_file.jks"}),")."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Next, you need to update your ",(0,r.jsx)(s.code,{children:"android/app/build.gradle"})," file to use this new keystore. Open the file and find the ",(0,r.jsx)(s.code,{children:"signingConfigs"})," section."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Change the ",(0,r.jsx)(s.code,{children:"signingConfig"})," to use your release keystore instead of the debug keystore."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-gradle",children:"    android {\n        ...\n        buildTypes {\n            release {\n                signingConfig signingConfigs.release\n                ...\n            }\n        }\n    ...\n    }\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.p,{children:"Now you can proceed to completing the authentication setup with Firebase for your app."})]})}function c(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>a});var o=n(6540);const r={},i=o.createContext(r);function t(e){const s=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(i.Provider,{value:s},e.children)}},9753:(e,s,n)=>{n.d(s,{A:()=>o});const o=n.p+"assets/images/android_build_mode-a71558bcaa4a78983f901100b0e5978b.png"}}]);